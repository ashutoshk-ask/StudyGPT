# Enhanced ML Backend Setup with Missing Features
# This will complete your AI_ML_FEATURES_SUMMARY.md requirements

version: '3.8'

services:
  ml-backend:
    build: .
    ports:
      - "8001:8001"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8001
      - REDIS_URL=redis://redis:6379
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
    depends_on:
      - redis
      - neo4j
      - chromadb
    volumes:
      - ./models:/app/models
      - ./data:/app/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  neo4j:
    image: neo4j:5.12
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password123
      - NEO4J_PLUGINS=["graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=gds.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs

  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8000:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    volumes:
      - chromadb_data:/chroma/chroma

  # PostgreSQL for main app (if needed for ML)
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=ssc_cgl_ml
      - POSTGRES_USER=ml_user
      - POSTGRES_PASSWORD=ml_password
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - postgres_ml_data:/var/lib/postgresql/data

volumes:
  redis_data:
  neo4j_data:
  neo4j_logs:
  chromadb_data:
  postgres_ml_data:

networks:
  default:
    name: ssc_cgl_ml_network